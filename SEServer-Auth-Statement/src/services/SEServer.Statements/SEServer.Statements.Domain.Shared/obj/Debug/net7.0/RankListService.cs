// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rankListService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SEServer.Statements.Domain.Shared {

  /// <summary>Holder for reflection information generated from rankListService.proto</summary>
  public static partial class RankListServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for rankListService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RankListServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVyYW5rTGlzdFNlcnZpY2UucHJvdG8SCHJhbmtMaXN0IkkKF0dldFJhbmtM",
            "aXN0QnlLREFSZXF1ZXN0EgwKBFNraXAYASABKAUSDAoEVGFrZRgCIAEoBRIS",
            "CgpTZWFyY2hOYW1lGAMgASgJImUKGEdldFJhbmtMaXN0QnlLREFSZXNwb25z",
            "ZRIQCghVc2VyTmFtZRgBIAEoCRIRCglJbWFnZVBhdGgYAiABKAkSEgoKVG90",
            "YWxTY29yZRgDIAEoAxIQCghUb3RhbEtEQRgEIAEoAyJLChlHZXRSYW5rTGlz",
            "dEJ5U2NvcmVSZXF1ZXN0EgwKBFNraXAYASABKAUSDAoEVGFrZRgCIAEoBRIS",
            "CgpTZWFyY2hOYW1lGAMgASgJImcKGkdldFJhbmtMaXN0QnlTY29yZVJlc3Bv",
            "bnNlEhAKCFVzZXJOYW1lGAEgASgJEhEKCUltYWdlUGF0aBgCIAEoCRISCgpU",
            "b3RhbFNjb3JlGAMgASgDEhAKCFRvdGFsS0RBGAQgASgDMtEBCg9SYW5rTGlz",
            "dFNlcnZpY2USWwoQR2V0UmFua0xpc3RCeUtEQRIhLnJhbmtMaXN0LkdldFJh",
            "bmtMaXN0QnlLREFSZXF1ZXN0GiIucmFua0xpc3QuR2V0UmFua0xpc3RCeUtE",
            "QVJlc3BvbnNlMAESYQoSR2V0UmFua0xpc3RCeVNjb3JlEiMucmFua0xpc3Qu",
            "R2V0UmFua0xpc3RCeVNjb3JlUmVxdWVzdBokLnJhbmtMaXN0LkdldFJhbmtM",
            "aXN0QnlTY29yZVJlc3BvbnNlMAFCJKoCIVNFU2VydmVyLlN0YXRlbWVudHMu",
            "RG9tYWluLlNoYXJlZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SEServer.Statements.Domain.Shared.GetRankListByKDARequest), global::SEServer.Statements.Domain.Shared.GetRankListByKDARequest.Parser, new[]{ "Skip", "Take", "SearchName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SEServer.Statements.Domain.Shared.GetRankListByKDAResponse), global::SEServer.Statements.Domain.Shared.GetRankListByKDAResponse.Parser, new[]{ "UserName", "ImagePath", "TotalScore", "TotalKDA" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SEServer.Statements.Domain.Shared.GetRankListByScoreRequest), global::SEServer.Statements.Domain.Shared.GetRankListByScoreRequest.Parser, new[]{ "Skip", "Take", "SearchName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SEServer.Statements.Domain.Shared.GetRankListByScoreResponse), global::SEServer.Statements.Domain.Shared.GetRankListByScoreResponse.Parser, new[]{ "UserName", "ImagePath", "TotalScore", "TotalKDA" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetRankListByKDARequest : pb::IMessage<GetRankListByKDARequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRankListByKDARequest> _parser = new pb::MessageParser<GetRankListByKDARequest>(() => new GetRankListByKDARequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankListByKDARequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SEServer.Statements.Domain.Shared.RankListServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDARequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDARequest(GetRankListByKDARequest other) : this() {
      skip_ = other.skip_;
      take_ = other.take_;
      searchName_ = other.searchName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDARequest Clone() {
      return new GetRankListByKDARequest(this);
    }

    /// <summary>Field number for the "Skip" field.</summary>
    public const int SkipFieldNumber = 1;
    private int skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    /// <summary>Field number for the "Take" field.</summary>
    public const int TakeFieldNumber = 2;
    private int take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }

    /// <summary>Field number for the "SearchName" field.</summary>
    public const int SearchNameFieldNumber = 3;
    private string searchName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchName {
      get { return searchName_; }
      set {
        searchName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankListByKDARequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankListByKDARequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (SearchName != other.SearchName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (Take != 0) hash ^= Take.GetHashCode();
      if (SearchName.Length != 0) hash ^= SearchName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (SearchName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SearchName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (SearchName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SearchName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (Take != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Take);
      }
      if (SearchName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankListByKDARequest other) {
      if (other == null) {
        return;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      if (other.Take != 0) {
        Take = other.Take;
      }
      if (other.SearchName.Length != 0) {
        SearchName = other.SearchName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            SearchName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            SearchName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRankListByKDAResponse : pb::IMessage<GetRankListByKDAResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRankListByKDAResponse> _parser = new pb::MessageParser<GetRankListByKDAResponse>(() => new GetRankListByKDAResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankListByKDAResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SEServer.Statements.Domain.Shared.RankListServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDAResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDAResponse(GetRankListByKDAResponse other) : this() {
      userName_ = other.userName_;
      imagePath_ = other.imagePath_;
      totalScore_ = other.totalScore_;
      totalKDA_ = other.totalKDA_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByKDAResponse Clone() {
      return new GetRankListByKDAResponse(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePath" field.</summary>
    public const int ImagePathFieldNumber = 2;
    private string imagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePath {
      get { return imagePath_; }
      set {
        imagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalScore" field.</summary>
    public const int TotalScoreFieldNumber = 3;
    private long totalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalScore {
      get { return totalScore_; }
      set {
        totalScore_ = value;
      }
    }

    /// <summary>Field number for the "TotalKDA" field.</summary>
    public const int TotalKDAFieldNumber = 4;
    private long totalKDA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalKDA {
      get { return totalKDA_; }
      set {
        totalKDA_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankListByKDAResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankListByKDAResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (ImagePath != other.ImagePath) return false;
      if (TotalScore != other.TotalScore) return false;
      if (TotalKDA != other.TotalKDA) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ImagePath.Length != 0) hash ^= ImagePath.GetHashCode();
      if (TotalScore != 0L) hash ^= TotalScore.GetHashCode();
      if (TotalKDA != 0L) hash ^= TotalKDA.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (ImagePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImagePath);
      }
      if (TotalScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalScore);
      }
      if (TotalKDA != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalKDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (ImagePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImagePath);
      }
      if (TotalScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalScore);
      }
      if (TotalKDA != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalKDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ImagePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePath);
      }
      if (TotalScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScore);
      }
      if (TotalKDA != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalKDA);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankListByKDAResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ImagePath.Length != 0) {
        ImagePath = other.ImagePath;
      }
      if (other.TotalScore != 0L) {
        TotalScore = other.TotalScore;
      }
      if (other.TotalKDA != 0L) {
        TotalKDA = other.TotalKDA;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            ImagePath = input.ReadString();
            break;
          }
          case 24: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 32: {
            TotalKDA = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            ImagePath = input.ReadString();
            break;
          }
          case 24: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 32: {
            TotalKDA = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRankListByScoreRequest : pb::IMessage<GetRankListByScoreRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRankListByScoreRequest> _parser = new pb::MessageParser<GetRankListByScoreRequest>(() => new GetRankListByScoreRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankListByScoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SEServer.Statements.Domain.Shared.RankListServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreRequest(GetRankListByScoreRequest other) : this() {
      skip_ = other.skip_;
      take_ = other.take_;
      searchName_ = other.searchName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreRequest Clone() {
      return new GetRankListByScoreRequest(this);
    }

    /// <summary>Field number for the "Skip" field.</summary>
    public const int SkipFieldNumber = 1;
    private int skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    /// <summary>Field number for the "Take" field.</summary>
    public const int TakeFieldNumber = 2;
    private int take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }

    /// <summary>Field number for the "SearchName" field.</summary>
    public const int SearchNameFieldNumber = 3;
    private string searchName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchName {
      get { return searchName_; }
      set {
        searchName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankListByScoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankListByScoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (SearchName != other.SearchName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (Take != 0) hash ^= Take.GetHashCode();
      if (SearchName.Length != 0) hash ^= SearchName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (SearchName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SearchName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (SearchName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SearchName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (Take != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Take);
      }
      if (SearchName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankListByScoreRequest other) {
      if (other == null) {
        return;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      if (other.Take != 0) {
        Take = other.Take;
      }
      if (other.SearchName.Length != 0) {
        SearchName = other.SearchName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            SearchName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            SearchName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRankListByScoreResponse : pb::IMessage<GetRankListByScoreResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRankListByScoreResponse> _parser = new pb::MessageParser<GetRankListByScoreResponse>(() => new GetRankListByScoreResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankListByScoreResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SEServer.Statements.Domain.Shared.RankListServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreResponse(GetRankListByScoreResponse other) : this() {
      userName_ = other.userName_;
      imagePath_ = other.imagePath_;
      totalScore_ = other.totalScore_;
      totalKDA_ = other.totalKDA_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankListByScoreResponse Clone() {
      return new GetRankListByScoreResponse(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImagePath" field.</summary>
    public const int ImagePathFieldNumber = 2;
    private string imagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImagePath {
      get { return imagePath_; }
      set {
        imagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalScore" field.</summary>
    public const int TotalScoreFieldNumber = 3;
    private long totalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalScore {
      get { return totalScore_; }
      set {
        totalScore_ = value;
      }
    }

    /// <summary>Field number for the "TotalKDA" field.</summary>
    public const int TotalKDAFieldNumber = 4;
    private long totalKDA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalKDA {
      get { return totalKDA_; }
      set {
        totalKDA_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankListByScoreResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankListByScoreResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (ImagePath != other.ImagePath) return false;
      if (TotalScore != other.TotalScore) return false;
      if (TotalKDA != other.TotalKDA) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ImagePath.Length != 0) hash ^= ImagePath.GetHashCode();
      if (TotalScore != 0L) hash ^= TotalScore.GetHashCode();
      if (TotalKDA != 0L) hash ^= TotalKDA.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (ImagePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImagePath);
      }
      if (TotalScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalScore);
      }
      if (TotalKDA != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalKDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (ImagePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImagePath);
      }
      if (TotalScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalScore);
      }
      if (TotalKDA != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalKDA);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ImagePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImagePath);
      }
      if (TotalScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScore);
      }
      if (TotalKDA != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalKDA);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankListByScoreResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ImagePath.Length != 0) {
        ImagePath = other.ImagePath;
      }
      if (other.TotalScore != 0L) {
        TotalScore = other.TotalScore;
      }
      if (other.TotalKDA != 0L) {
        TotalKDA = other.TotalKDA;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            ImagePath = input.ReadString();
            break;
          }
          case 24: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 32: {
            TotalKDA = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            ImagePath = input.ReadString();
            break;
          }
          case 24: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 32: {
            TotalKDA = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
